{
  "logic_puzzles": [
    {
      "id": 1,
      "type": "visual_bug",
      "title": "Spot the Syntax Error",
      "description": "Examine the Python code snippet below. Which line contains a syntax error?",
      "code": "1: def greet(name):\n2:     print('Hello, ' + name)\n3: greet('World')",
      "correct_answer": "No syntax error",
      "options": [
        "Line 1: Missing colon",
        "Line 2: Incorrect string concatenation",
        "Line 3: Function call error",
        "No syntax error"
      ],

      "difficulty": "easy"
    },
    {
      "id": 2,
      "type": "visual_bug",
      "title": "Identify the Indentation Error",
      "description": "This Python code has an indentation issue. Where is the bug?",
      "code": "1: for i in range(3):\n2: print(i)\n3:     print('Done')",
      "correct_answer": "Line 2: Incorrect indentation",
      "options": [
        "Line 1: Missing parenthesis",
        "Line 2: Incorrect indentation",
        "Line 3: Extra indentation",
        "No error"
      ],

      "difficulty": "medium"
    },
    {
      "id": 3,
      "type": "logic_grid",
      "title": "Binary to Decimal Conversion",
      "description": "What is the decimal equivalent of the binary number `1011`?",
      "correct_answer": "11",
      "options": ["9", "10", "11", "12"],

      "difficulty": "medium"
    },
    {
      "id": 4,
      "type": "pattern_recognition",
      "title": "Fibonacci Sequence",
      "description": "What is the next number in the Fibonacci sequence: 0, 1, 1, 2, 3, 5, 8, ?",
      "correct_answer": "13",
      "options": ["10", "11", "12", "13"],

      "difficulty": "easy"
    },
    {
      "id": 5,
      "type": "logic_grid",
      "title": "Boolean Logic Gate",
      "description": "If Input A is TRUE and Input B is FALSE, what is the output of an AND gate?",
      "correct_answer": "FALSE",
      "options": ["TRUE", "FALSE", "Depends on the gate type", "Error"],

      "difficulty": "medium"
    },
    {
      "id": 6,
      "type": "pattern_recognition",
      "title": "Geometric Progression",
      "description": "What is the next number in the sequence: 1, 3, 9, 27, ?",
      "correct_answer": "81",
      "options": ["36", "45", "81", "90"],

      "difficulty": "easy"
    },
    {
      "id": 7,
      "type": "visual_bug",
      "title": "Python List Indexing Error",
      "description": "Identify the error in this Python code when trying to access a list element.",
      "code": "1: my_list = [10, 20, 30]\n2: print(my_list[3])",
      "correct_answer": "IndexError: list index out of range",
      "options": [
        "SyntaxError: invalid syntax",
        "TypeError: unsupported operand type(s)",
        "IndexError: list index out of range",
        "No error"
      ],

      "difficulty": "medium"
    }
  ],
  "tech_trivia": [
    {
      "id": 1,
      "question": "Which programming paradigm focuses on 'objects' and 'classes'?",
      "correct_answer": "Object-Oriented Programming (OOP)",
      "options": [
        "Functional Programming",
        "Procedural Programming",
        "Object-Oriented Programming (OOP)",
        "Logic Programming"
      ],

      "category": "Programming Concepts",
      "difficulty": "medium"
    },
    {
      "id": 2,
      "question": "What is the primary purpose of SQL?",
      "correct_answer": "Managing and querying relational databases",
      "options": [
        "Styling web pages",
        "Building mobile applications",
        "Managing and querying relational databases",
        "Creating artificial intelligence models"
      ],

      "category": "Databases",
      "difficulty": "easy"
    },
    {
      "id": 3,
      "question": "Which cloud computing service model provides virtualized computing resources over the internet?",
      "correct_answer": "IaaS (Infrastructure as a Service)",
      "options": [
        "SaaS (Software as a Service)",
        "PaaS (Platform as a Service)",
        "IaaS (Infrastructure as a Service)",
        "FaaS (Function as a Service)"
      ],

      "category": "Cloud Computing",
      "difficulty": "hard"
    },
    {
      "id": 4,
      "question": "What does HTTP status code 404 signify?",
      "correct_answer": "Not Found",
      "options": ["OK", "Bad Request", "Unauthorized", "Not Found"],

      "category": "Web Development",
      "difficulty": "easy"
    },
    {
      "id": 5,
      "question": "Which data structure operates on a 'Last-In, First-Out' (LIFO) principle?",
      "correct_answer": "Stack",
      "options": ["Queue", "Array", "Linked List", "Stack"],

      "category": "Data Structures",
      "difficulty": "medium"
    },
    {
      "id": 6,
      "question": "What is the smallest unit of data in a computer?",
      "correct_answer": "Bit",
      "options": ["Byte", "Bit", "Nibble", "Word"],

      "category": "Computer Fundamentals",
      "difficulty": "easy"
    },
    {
      "id": 7,
      "question": "Which of these is a version control system?",
      "correct_answer": "Git",
      "options": ["Docker", "Kubernetes", "Jenkins", "Git"],

      "category": "DevOps",
      "difficulty": "medium"
    },
    {
      "id": 8,
      "question": "What is the main advantage of using a NoSQL database over a relational database for certain applications?",
      "correct_answer": "Scalability and flexibility with unstructured data",
      "options": [
        "Strict data consistency",
        "Complex join operations",
        "Scalability and flexibility with unstructured data",
        "ACID compliance by default"
      ],

      "category": "Databases",
      "difficulty": "hard"
    }
  ],
  "word_scrambles": [
    {
      "id": 1,
      "scrambled": "TPYHON",
      "correct_answer": "PYTHON",
      "hint": "Popular programming language with a snake logo.",

      "category": "Programming Languages"
    },
    {
      "id": 2,
      "scrambled": "TAABAEDS",
      "correct_answer": "DATABASE",
      "hint": "Organized collection of structured information.",

      "category": "Data Management"
    },
    {
      "id": 3,
      "scrambled": "GORHLITMA",
      "correct_answer": "ALGORITHM",
      "hint": "A step-by-step procedure for solving a problem.",

      "category": "Computer Science"
    },
    {
      "id": 4,
      "scrambled": "EEAHCMINNLRG",
      "correct_answer": "MACHINELEARNING",
      "hint": "A field of AI that enables systems to learn from data.",

      "category": "Artificial Intelligence"
    },
    {
      "id": 5,
      "scrambled": "KLOIANDHCBC",
      "correct_answer": "BLOCKCHAIN",
      "hint": "Decentralized, distributed ledger technology.",

      "category": "Emerging Tech"
    },
    {
      "id": 6,
      "scrambled": "WEEBRV",
      "correct_answer": "WEBVIEW",
      "hint": "A component that displays web content within an app.",

      "category": "Web Development"
    },
    {
      "id": 7,
      "scrambled": "YCRPTGOHARYP",
      "correct_answer": "CRYPTOGRAPHY",
      "hint": "The practice and study of secure communication.",

      "category": "Cybersecurity"
    },
    {
      "id": 8,
      "type": "visual_bug",
      "title": "Unreachable Code After Return",
      "description": "What's the issue with the function defined below?",
      "code": "1: def multiply(a, b):\n2:     return a * b\n3:     print('This will never run')",
      "correct_answer": "Line 3: Unreachable code",
      "options": [
        "Line 1: Missing type annotations",
        "Line 2: Incorrect return syntax",
        "Line 3: Unreachable code",
        "No error"
      ],
      "difficulty": "medium"
    },
    {
      "id": 9,
      "type": "visual_bug",
      "title": "Unexpected Indentation in Loop",
      "description": "Find the logical issue with this loop construct.",
      "code": "1: for i in range(3):\n2:     print(i)\n3:      print('Looping')",
      "correct_answer": "Line 3: Inconsistent indentation",
      "options": [
        "Line 1: Incorrect range syntax",
        "Line 2: Extra indentation",
        "Line 3: Inconsistent indentation",
        "No error"
      ],
      "difficulty": "hard"
    },
    {
      "id": 10,
      "type": "visual_bug",
      "title": "List Modification While Iterating",
      "description": "Identify the logical bug in modifying a list during iteration.",
      "code": "1: items = [1, 2, 3, 4]\n2: for item in items:\n3:     if item % 2 == 0:\n4:         items.remove(item)\n5: print(items)",
      "correct_answer": "Line 4: Modifying list while iterating",
      "options": [
        "Line 2: Incorrect loop syntax",
        "Line 4: Modifying list while iterating",
        "Line 5: Should use return instead of print",
        "No error"
      ],
      "difficulty": "hard"
    },
    {
      "id": 11,
      "type": "visual_bug",
      "title": "Confusing Equality Operator",
      "description": "Which line contains a logical bug in checking for equality?",
      "code": "1: x = 10\n2: if x = 10:\n3:     print('Ten')",
      "correct_answer": "Line 2: Assignment instead of equality check",
      "options": [
        "Line 1: x should be a string",
        "Line 2: Assignment instead of equality check",
        "Line 3: Missing indentation",
        "No error"
      ],
      "difficulty": "hard"
    },
    {
      "id": 12,
      "type": "visual_bug",
      "title": "Mutable Default Argument Trap",
      "description": "Spot the problem with using a mutable default argument in a function.",
      "code": "1: def append_item(item, items=[]):\n2:     items.append(item)\n3:     return items\n4: print(append_item(1))\n5: print(append_item(2))",
      "correct_answer": "Line 1: Mutable default argument",
      "options": [
        "Line 2: append is not a valid list method",
        "Line 3: Should use return items[:] instead",
        "Line 1: Mutable default argument",
        "No error"
      ],
      "difficulty": "hard"
    }
  ],
  "drag_drop_code": [
    {
      "id": 1,
      "title": "Complete the Python Function",
      "description": "Arrange the code blocks to create a function that prints 'Hello World'.",
      "code_blocks": ["def hello():", "    print('Hello World')", "hello()"],
      "correct_order": [0, 1, 2],

      "difficulty": "easy"
    },
    {
      "id": 2,
      "title": "For Loop Structure",
      "description": "Arrange the code blocks to create a proper for loop that prints numbers 1 to 5.",
      "code_blocks": ["for i in range(1, 6):", "    print(i)"],
      "correct_order": [0, 1],

      "difficulty": "medium"
    },
    {
      "id": 3,
      "title": "Conditional Statement",
      "description": "Arrange the code blocks to create an `if-else` statement that checks if a number is positive.",
      "code_blocks": [
        "number = 10",
        "if number > 0:",
        "    print('Positive')",
        "else:",
        "    print('Non-positive')"
      ],
      "correct_order": [0, 1, 2, 3, 4],

      "difficulty": "medium"
    },
    {
      "id": 4,
      "title": "Simple HTML Structure",
      "description": "Arrange the HTML tags to create a basic web page with a title and a heading.",
      "code_blocks": [
        "<!DOCTYPE html>",
        "<html>",
        "<head>",
        "    <title>My Page</title>",
        "</head>",
        "<body>",
        "    <h1>Welcome!</h1>",
        "</body>",
        "</html>"
      ],
      "correct_order": [0, 1, 2, 3, 4, 5, 6, 7, 8],

      "difficulty": "easy"
    },
    {
      "id": 5,
      "title": "JavaScript Array Iteration",
      "description": "Arrange the code blocks to iterate over a JavaScript array and print each element to the console.",
      "code_blocks": [
        "const fruits = ['apple', 'banana', 'cherry'];",
        "for (let i = 0; i < fruits.length; i++) {",
        "    console.log(fruits[i]);",
        "}"
      ],
      "correct_order": [0, 1, 2, 3],

      "difficulty": "medium"
    },
    {
      "id": 6,
      "title": "Recursive Factorial Function",
      "description": "Arrange the code blocks to define a recursive factorial function.",
      "code_blocks": [
        "def factorial(n):",
        "    if n == 0:",
        "        return 1",
        "    return n * factorial(n - 1)",
        "print(factorial(5))"
      ],
      "correct_order": [0, 1, 2, 3, 4],
      "difficulty": "medium"
    },
    {
      "id": 7,
      "title": "Check Prime Number",
      "description": "Reorder the code to check if a number is prime.",
      "code_blocks": [
        "num = 7",
        "is_prime = True",
        "for i in range(2, num):",
        "    if num % i == 0:",
        "        is_prime = False",
        "        break",
        "print(is_prime)"
      ],
      "correct_order": [0, 1, 2, 3, 4, 5, 6],
      "difficulty": "hard"
    },
    {
      "id": 8,
      "title": "HTML Page with Image",
      "description": "Arrange the HTML tags to include an image and a heading.",
      "code_blocks": [
        "<!DOCTYPE html>",
        "<html>",
        "<head>",
        "  <title>Image Page</title>",
        "</head>",
        "<body>",
        "  <h1>Hello World</h1>",
        "  <img src='logo.png' alt='Logo'>",
        "</body>",
        "</html>"
      ],
      "correct_order": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
      "difficulty": "medium"
    },
    {
      "id": 9,
      "title": "FizzBuzz Implementation",
      "description": "Reorder the code blocks to complete a FizzBuzz from 1 to 15.",
      "code_blocks": [
        "for i in range(1, 16):",
        "    if i % 3 == 0 and i % 5 == 0:",
        "        print('FizzBuzz')",
        "    elif i % 3 == 0:",
        "        print('Fizz')",
        "    elif i % 5 == 0:",
        "        print('Buzz')",
        "    else:",
        "        print(i)"
      ],
      "correct_order": [0, 1, 2, 3, 4, 5, 6, 7],
      "difficulty": "hard"
    },
    {
      "id": 10,
      "title": "JavaScript Function Declaration",
      "description": "Reorder the code to define and call a JavaScript function.",
      "code_blocks": [
        "function greet(name) {",
        "  return 'Hello, ' + name;",
        "}",
        "console.log(greet('Alice'));"
      ],
      "correct_order": [0, 1, 2, 3],
      "difficulty": "medium"
    }
  ]
}
